import items.*
import overcooked.*
import wollok.game.*
import tiles.*
import soundProducer.*

describe "I really like these tests :)" {

	var player = new Player(position = game.origin(), character = "paulo")
	var meat = new Ingredient(name = "meat", position = game.at(0, 1))

	method initialize() {
		soundProducer.provider(soundProviderMock)
		game.clear()
		player = new Player(position = game.origin(), character = "paulo")
		game.addVisual(player)
		// meat.position(game.at(0,1))
		meat = new Ingredient(name = "meat", position = game.at(0, 1))
		game.addVisual(meat)
		player.agarrar(meat)
	}

	test "el personaje se puede mover en una direccion en especifico" {
		player.moveN(up, 3)
		player.moveN(right, 3)
		assert.equals(game.at(3, 3),player.position())
	}

	test "el jugador debe mirar a la ultima direccion que se movio" {
		player.moveN(right, 4)
		player.moveN(left, 2)
		assert.equals(player.facingDirection(), left)
	}

	test "despues de agarrar un objeto debe seguir al jugador" {
		player.accion()
		player.moveN(up, 4)
		assert.equals(meat.position(), game.at(0, 5))
	}

	test "el objeto elegido siempre tiene que estar al frente del jugador" {
		player.accion()
		player.moveN(right, 5)
		assert.equals(meat.position(), game.at(6, 0))
	}



	test "An item can't be picked if its being picked by a player" {
		var player1 = new Player(position = game.origin(), character = "paulo")
		player1.agarrar(meat)
		assert.notThat(meat.sePuedeAgarrar())
	}

	test "A player can't pick an item from the other player's hands" {		
		var player2 = new Player(position = game.at(0, 2), character = "paulo")		
		player2.faceTowards()
		player2.accion()
		assert.notThat(player2.estaAgarrando(meat))
	}

	test "A player can't walk through a desk" {
		game.addVisual(new Desk(position = game.at(0, 1)))
		player.move(up)
		assert.equals(game.origin(), player.position())
	}

	test "A player can't walk out of bounds" {
		player.move()
		assert.equals(game.origin(), player.position())
	}

}